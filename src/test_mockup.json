{
  "nodes": [
    {
      "input": [
        {
          "name": "Color",
          "uuid": "b581b1a6-2751-43ec-a36d-ea23407a92d1"
        }
      ],
      "output": [
        {
          "name": "Material",
          "uuid": "78f45303-10ca-4fdb-95f4-27a6a01219e8"
        }
      ],
      "name": "Material",
      "uuid": "b7bf8580-ec63-4f09-af37-dd850b7c73dc",
      "position": {
        "x": 54,
        "y": 300
      },
      "_fnstr": "this.init = input => {\n  this.material = new THREE.MeshBasicMaterial( { \n    \tcolor: 0xffffff, \n    \twireframe: true,\n      wireframeLinewidth: 2\n  \t}\n  )\n}\n\nthis.process = input => {\n  return {\n    Material: this.material\n  }\n}\n\nthis.flush = () => {\n  this.material.dispose()\n  delete this.material\n  this.flushOutput()\n}"
    },
    {
      "input": [],
      "output": [
        {
          "name": "X",
          "uuid": "dd3e35b0-337b-4218-a17b-d22d001151bc"
        },
        {
          "name": "Y",
          "uuid": "b8855666-0218-47e6-be76-a022ba3bc1d2"
        },
        {
          "name": "Z",
          "uuid": "4e3c469a-39f3-4496-bba3-17738548fb89"
        }
      ],
      "name": "DATA",
      "uuid": "7202766b-22b6-4681-a6ad-53f3e64657dd",
      "position": {
        "x": 196,
        "y": 370
      },
      "_fnstr": "this.init = () => {\n\tthis.clock = new THREE.Clock()\n}\n\nthis.process = () => {\n  return {\n    X: 0.1 * this.clock.getDelta(),\n    Y: 0,\n    Z: 0\n  }\n}\n\nthis.flush = () => {\n  this.flushOutput()\n}"
    },
    {
      "input": [],
      "output": [
        {
          "name": "Geometry",
          "uuid": "5b70af39-95e2-4d2d-89fe-3d59b7826bf9"
        }
      ],
      "name": "GEOMETRY",
      "uuid": "353226ed-aa1f-4cf8-a18e-9c77d62ba7d2",
      "position": {
        "x": 150,
        "y": 237
      },
      "_fnstr": "this.init = input => {\n  this.geometry = new THREE.IcosahedronGeometry(\n    600,\n    1\n  )\n}\n\nthis.process = input => {\n  return {\n    Geometry: this.geometry\n  }\n}\n\nthis.flush = () => {\n  this.geometry.dispose()\n\tdelete this.geometry\n  this.flushOutput()\n}"
    },
    {
      "input": [
        {
          "name": "Geometry",
          "uuid": "03b496aa-fef4-40fe-b92d-349e19be6e2d"
        },
        {
          "name": "Material",
          "uuid": "d604568e-4c5f-46fe-86be-8097c326520d"
        },
        {
          "name": "Data",
          "uuid": "d35ed7c5-dbe0-46de-b398-35d18cdf2a3f"
        }
      ],
      "output": [
        {
          "name": "Mesh",
          "uuid": "51864512-abc8-4f3f-88c1-a189ce8f8b74"
        }
      ],
      "name": "MESH",
      "uuid": "727d89a3-22ee-4af7-9689-41c23fe6e568",
      "position": {
        "x": 321,
        "y": 284
      },
      "_fnstr": "this.init = input => {\n  this.mesh = new THREE.Mesh(\n    input.Geometry,\n    input.Material\n  )\n}\n\nthis.process = input => {\n  this.mesh.rotation.x += input.Data\n  this.mesh.rotation.y += input.Data\n  this.mesh.rotation.z += input.Data\n  return {\n    Mesh: this.mesh\n  }\n}\n\nthis.flush = () => {\n  delete this.mesh\n  this.flushOutput()\n}"
    },
    {
      "input": [
        {
          "name": "Object3D",
          "uuid": "e4c87c73-7eea-494a-b1cb-c178b48975a0"
        }
      ],
      "output": [
        {
          "name": "Scene",
          "uuid": "e8534b90-307e-46db-9a8f-5454620b961b"
        }
      ],
      "name": "SCENE",
      "uuid": "f025ea39-5041-4947-ab0d-2e68079911da",
      "position": {
        "x": 538,
        "y": 331
      },
      "_fnstr": "this.init = input => {\n  this.scene = new THREE.Scene()\n  this.mesh = input.Object3D\n  this.scene.add( this.mesh )\n}\n\nthis.process = input => {\n  return {\n    Scene: this.scene\n  }\n}\n\nthis.flush = () => {\n  this.scene.children.forEach( child => {\n    this.scene.remove( child )\n  } )\n\tdelete this.scene\n  this.flushOutput()\n}"
    },
    {
      "input": [
        {
          "name": "Camera",
          "uuid": "ab381cad-7036-4abe-bf6f-edd7b9051d49"
        },
        {
          "name": "Scene",
          "uuid": "2ee00718-03e4-43ab-abc3-3ee5510737b3"
        }
      ],
      "output": [],
      "name": "RENDERER",
      "uuid": "8e9aaadd-5ce9-49e9-b653-dbb33c1ed5e8",
      "position": {
        "x": 756,
        "y": 283
      },
      "_fnstr": "this.init = ( input, engine ) => {\n  let renderer = engine.renderer\n  renderer.setClearColor( 0x000000, 0 )\n  renderer.clear()\n}\n\nthis.process = ( input, engine ) => {\n  let renderer = engine.renderer\n  renderer.render( input.Scene, input.Camera )\n}\n\nthis.flush = () => {\n  this.flushOutput()\n}"
    },
    {
      "input": [],
      "output": [
        {
          "name": "Camera",
          "uuid": "13f3fab8-2072-4de7-9e5a-5e647ea39248"
        }
      ],
      "name": "CAMERA",
      "uuid": "55c227a4-1929-4b38-a798-10f83c639c56",
      "position": {
        "x": 570,
        "y": 255
      },
      "_fnstr": "this.init = ( input, engine ) => {\n  this.camera = new THREE.PerspectiveCamera( 75, engine.width / engine.height, 1, 10000 )\n  this.camera.position.z = 1000\n}\n\nthis.process = ( input, engine ) => {\n  this.camera.aspect = engine.width / engine.height\n  this.camera.updateProjectionMatrix()\n  return {\n    Camera: this.camera\n  }\n}\n\nthis.flush = () => {\n  delete this.camera\n  this.flushOutput()\n}"
    }
  ],
  "connections": [
    {
      "output": "13f3fab8-2072-4de7-9e5a-5e647ea39248",
      "input": "ab381cad-7036-4abe-bf6f-edd7b9051d49"
    },
    {
      "output": "e8534b90-307e-46db-9a8f-5454620b961b",
      "input": "2ee00718-03e4-43ab-abc3-3ee5510737b3"
    },
    {
      "output": "51864512-abc8-4f3f-88c1-a189ce8f8b74",
      "input": "e4c87c73-7eea-494a-b1cb-c178b48975a0"
    },
    {
      "output": "78f45303-10ca-4fdb-95f4-27a6a01219e8",
      "input": "d604568e-4c5f-46fe-86be-8097c326520d"
    },
    {
      "output": "dd3e35b0-337b-4218-a17b-d22d001151bc",
      "input": "d35ed7c5-dbe0-46de-b398-35d18cdf2a3f"
    },
    {
      "output": "5b70af39-95e2-4d2d-89fe-3d59b7826bf9",
      "input": "03b496aa-fef4-40fe-b92d-349e19be6e2d"
    }
  ]
}
